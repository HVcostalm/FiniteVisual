/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.AutomatoFinitoDeterministico;
import model.Estado;
import model.Transicao;

/**
 *
 * @author heito
 */
public class TelaCriarAutomato_Transicoes extends javax.swing.JFrame {
    private List<AutomatoFinitoDeterministico> automatosRecebidos;
    private AutomatoFinitoDeterministico automatoRecebido = new AutomatoFinitoDeterministico();
    private String verificarVazioEstadoOrigem, verificarVazioSimbolo, verificarVazioEstadoDestino;
    private int numeroTransicoes, contadorTransicao = 1;
    List<Transicao> transicoes = new ArrayList<>();
    /**
     * Creates new form TelaCriarAutomato_Transicoes
     */
    public TelaCriarAutomato_Transicoes(List<AutomatoFinitoDeterministico> automatos, AutomatoFinitoDeterministico automato, int numeroTransicoes){
        this.automatosRecebidos = automatos;
        this.automatoRecebido = automato;
        this.numeroTransicoes = numeroTransicoes;
        initComponents();
        atualizarPosicaoTransicao();
        mostrarEstadosAlfabetoEstadoInicial();
    }
    
    public TelaCriarAutomato_Transicoes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelEstadosCriados = new javax.swing.JLabel();
        jLabelMensagemEstadoInicial = new javax.swing.JLabel();
        jLabelMensagemAlfabeto = new javax.swing.JLabel();
        jLabelTodosEstados = new javax.swing.JLabel();
        jLabelEstadoInicial = new javax.swing.JLabel();
        jLabelAlfabeto = new javax.swing.JLabel();
        jLabelPosicaoTransicao = new javax.swing.JLabel();
        jLabelEstadoOrigem = new javax.swing.JLabel();
        jLabelSimbolo = new javax.swing.JLabel();
        jLabelEstadoDestino = new javax.swing.JLabel();
        txtEstadoOrigem = new javax.swing.JTextField();
        txtSimbolo = new javax.swing.JTextField();
        txtEstadoDestino = new javax.swing.JTextField();
        botaoCriarTransicao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelEstadosCriados.setText("Estados Criados");

        jLabelMensagemEstadoInicial.setText("Estado Inicial");

        jLabelMensagemAlfabeto.setText("Alfabeto Definido");

        jLabelTodosEstados.setText("jLabel4");

        jLabelEstadoInicial.setText("jLabel5");

        jLabelAlfabeto.setText("jLabel6");

        jLabelPosicaoTransicao.setText("jLabel7");

        jLabelEstadoOrigem.setText("Estado Origem");

        jLabelSimbolo.setText("Simbolo");

        jLabelEstadoDestino.setText("Estado Destino");

        txtEstadoOrigem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstadoOrigemKeyPressed(evt);
            }
        });

        txtSimbolo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSimboloKeyPressed(evt);
            }
        });

        txtEstadoDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEstadoDestinoKeyPressed(evt);
            }
        });

        botaoCriarTransicao.setText("Criar Transição");
        botaoCriarTransicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCriarTransicaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelEstadoOrigem)
                                .addGap(189, 189, 189)
                                .addComponent(jLabelSimbolo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTodosEstados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelEstadoInicial)
                                .addGap(53, 53, 53))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelEstadosCriados)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelMensagemEstadoInicial)
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelMensagemAlfabeto)
                                    .addComponent(jLabelAlfabeto)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(jLabelEstadoDestino)))
                        .addGap(100, 100, 100))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtEstadoOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEstadoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPosicaoTransicao)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(267, 267, 267)
                                .addComponent(txtSimbolo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoCriarTransicao, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(251, 251, 251))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEstadosCriados)
                    .addComponent(jLabelMensagemEstadoInicial)
                    .addComponent(jLabelMensagemAlfabeto))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTodosEstados)
                    .addComponent(jLabelEstadoInicial)
                    .addComponent(jLabelAlfabeto))
                .addGap(45, 45, 45)
                .addComponent(jLabelPosicaoTransicao)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEstadoOrigem)
                    .addComponent(jLabelSimbolo)
                    .addComponent(jLabelEstadoDestino))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEstadoOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSimbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstadoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(botaoCriarTransicao)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void atualizarPosicaoTransicao(){
        jLabelPosicaoTransicao.setText("Transição " + (contadorTransicao) + ":");
        txtEstadoOrigem.setText("");
        txtSimbolo.setText("");
        txtEstadoDestino.setText("");
    }
    
    private void mostrarEstadosAlfabetoEstadoInicial(){        
        jLabelAlfabeto.setText(automatoRecebido.getAlfabeto().toString());
        jLabelTodosEstados.setText(automatoRecebido.getEstados().toString());
        jLabelEstadoInicial.setText(automatoRecebido.getEstadoInicial().getNome());
    }
    
    private void reiniciarCriarTransicao(){
        contadorTransicao = 1;
        mostrarEstadosAlfabetoEstadoInicial();
        atualizarPosicaoTransicao();
    }
    
    private void adicionarTransicao(){
        verificarVazioEstadoOrigem = txtEstadoOrigem.getText();
        verificarVazioSimbolo = txtSimbolo.getText();
        verificarVazioEstadoDestino = txtEstadoDestino.getText();
        
        if (verificarVazioEstadoOrigem.equalsIgnoreCase("") || verificarVazioSimbolo.equalsIgnoreCase("") || verificarVazioEstadoDestino.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Campo Vazio!!!");
            reiniciarCriarTransicao();
        }
        else{
            String simboloStr,nomeEstadoOrigem, nomeEstadoDestino;
            char simbolo;
            Estado estadoOrigem = null;
            Estado estadoDestino = null;
            
            nomeEstadoOrigem = txtEstadoOrigem.getText();
            for (Estado estado : automatoRecebido.getEstados()) {
                if (estado.getNome().equals(nomeEstadoOrigem)) {
                    estadoOrigem = estado;
                    break;
                }
            }

            if (estadoOrigem == null) {
                JOptionPane.showMessageDialog(null, "Estado Origem inválido");
                transicoes.removeAll(transicoes);
                reiniciarCriarTransicao();
            }

            simboloStr = txtSimbolo.getText();
            simbolo = simboloStr.charAt(0);

            if (!automatoRecebido.getAlfabeto().contains(simbolo)) {
                JOptionPane.showMessageDialog(null, "Simbolo inválido");
                transicoes.removeAll(transicoes);
                reiniciarCriarTransicao();
            }

            nomeEstadoDestino = txtEstadoDestino.getText();
            for (Estado estado : automatoRecebido.getEstados()) {
                if (estado.getNome().equals(nomeEstadoDestino)) {
                    estadoDestino = estado;
                    break;
                }
            }

            if (estadoDestino == null) {
                JOptionPane.showMessageDialog(null, "Estado Destino inválido");
                transicoes.removeAll(transicoes);
                reiniciarCriarTransicao();
            }
            
            transicoes.add(new Transicao(estadoOrigem, simbolo, estadoDestino));
            estadoOrigem = null;
            estadoDestino = null;
            
            if(contadorTransicao==numeroTransicoes){
                JOptionPane.showMessageDialog(null, "Transições Criadas");
                automatoRecebido.setTransicoes(transicoes);
                automatosRecebidos.add(automatoRecebido);
                JOptionPane.showMessageDialog(null, "Automato criado com sucesso!!!");
                
                Object[] opcao = {"Sim", "Não"};
                int opcaoSelecionada = JOptionPane.showOptionDialog(this, "Deseja verificar a cadeia do automato criado?", "Aviso",
                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, opcao, opcao[0]);
                if (opcaoSelecionada == 0) {
                    TelaVerificarCadeia telaVerificarCadeia = new TelaVerificarCadeia(automatosRecebidos,automatoRecebido);
                    telaVerificarCadeia.setVisible(true);
                    this.dispose();
                }
                else{
                    TelaPrincipal telaPrincipal = new TelaPrincipal(automatosRecebidos);
                    telaPrincipal.setVisible(true);
                    this.dispose();
                }
                
            }
            contadorTransicao++;
            atualizarPosicaoTransicao();
        }
    }
    
    private void botaoCriarTransicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCriarTransicaoActionPerformed
        // TODO add your handling code here:
        adicionarTransicao();
    }//GEN-LAST:event_botaoCriarTransicaoActionPerformed

    private void txtEstadoOrigemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoOrigemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            adicionarTransicao();
        }
    }//GEN-LAST:event_txtEstadoOrigemKeyPressed

    private void txtSimboloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSimboloKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            adicionarTransicao();
        }
    }//GEN-LAST:event_txtSimboloKeyPressed

    private void txtEstadoDestinoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoDestinoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            adicionarTransicao();
        }
    }//GEN-LAST:event_txtEstadoDestinoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCriarAutomato_Transicoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCriarAutomato_Transicoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCriarAutomato_Transicoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCriarAutomato_Transicoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCriarAutomato_Transicoes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCriarTransicao;
    private javax.swing.JLabel jLabelAlfabeto;
    private javax.swing.JLabel jLabelEstadoDestino;
    private javax.swing.JLabel jLabelEstadoInicial;
    private javax.swing.JLabel jLabelEstadoOrigem;
    private javax.swing.JLabel jLabelEstadosCriados;
    private javax.swing.JLabel jLabelMensagemAlfabeto;
    private javax.swing.JLabel jLabelMensagemEstadoInicial;
    private javax.swing.JLabel jLabelPosicaoTransicao;
    private javax.swing.JLabel jLabelSimbolo;
    private javax.swing.JLabel jLabelTodosEstados;
    private javax.swing.JTextField txtEstadoDestino;
    private javax.swing.JTextField txtEstadoOrigem;
    private javax.swing.JTextField txtSimbolo;
    // End of variables declaration//GEN-END:variables
}
